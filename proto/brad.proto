syntax = "proto3";

package brad;

// BRAD's internal-use RPC interface.
service Brad {
  // Start a new session.
  // All requests (except this one) must include a `SessionId` that is returned
  // by this method.
  rpc StartSession(StartSessionRequest) returns (StartSessionResponse) {}

  // Run a SQL query (or execute an internal command like BRAD_SYNC).
  rpc RunQuery(RunQueryRequest) returns (stream RunQueryResponse) {}

  // Run a SQL query (or execute an internal command like BRAD_SYNC) and return
  // the results as a serialized JSON string.
  rpc RunQueryJson(RunQueryRequest) returns (RunQueryJsonResponse) {}

  // End a previously started session. Clients must call this method once they
  // are done with their session.
  rpc EndSession(EndSessionRequest) returns (EndSessionResponse) {}
}

message SessionId {
  uint64 id_value = 1;
}

message StartSessionRequest {
  uint64 unused = 100;
}

message StartSessionResponse {
  SessionId id = 1;
}

message RunQueryRequest {
  SessionId id = 1;
  string query = 2;
}

message RunQueryResponse {
  oneof result {
    QueryResultRow row = 1;
    QueryError error = 2;
  }

  // The engine that was used to actually run the query.
  ExecutionEngine executor = 100;

  // If true, this indicates that the response is not meant to be displayed in a
  // table. This is usually set when fetching debug or internal state.
  bool not_tabular = 101;
}

message RunQueryJsonResponse {
  oneof result {
    QueryJsonResponse results = 1;
    QueryError error = 2;
  }
}

message QueryResultRow {
  // Arbitrary encoding.
  bytes row_data = 1;
}

message QueryError {
  string error_msg = 1;

  // If true, the client should retry the query. Transient errors are usually
  // due to underlying engine provisioning changes.
  bool is_transient = 2;
}

message QueryJsonResponse {
  // The response, serialized as a JSON string.
  string results_json = 1;

  // The engine that was used to actually run the query.
  ExecutionEngine executor = 2;

  // If true, this indicates that the response is not meant to be displayed in a
  // table. This is usually set when fetching debug or internal state.
  bool not_tabular = 3;
}

message EndSessionRequest {
  SessionId id = 1;
}

message EndSessionResponse {
  uint64 unused = 100;
}

enum ExecutionEngine {
  ENG_UNKNOWN = 0;
  ENG_AURORA = 1;
  ENG_REDSHIFT = 2;
  ENG_ATHENA = 3;
}
