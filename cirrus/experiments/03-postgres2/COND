SCALE_FACTOR = 10

RUN_FOR = 30
WARMUP = 1

def custom_workload_factor(wf):
  # "workload factor" represents the number of transactional clients.
  # We have 1 analytical client per 16 transactional clients. We always have at
  # least 1 analytical client running.
  a_clients = 1 + (wf // 16)
  return {
    "tclients": wf,
    "aclients": a_clients,
  }

WORKLOAD_FACTORS = {
  "m6i_large": [1, 4, 8, 12, 16],
  "m6i_xlarge": [1, 4, 8, 12, 16, 20, 24, 28, 32],
}

for config, factors in WORKLOAD_FACTORS.items():
  combine(
    name=config,
    deps=[
      ":pg-{}".format(config),
      ":pgt-{}".format(config),
    ],
  )

  run_experiment_group(
    name="pg-{}".format(config),
    run="./run_postgres.sh",
    experiments=[
      ExperimentInstance(
        name="pg-{}-{}".format(config, wf),
        options={
          "sf": SCALE_FACTOR,
          **custom_workload_factor(wf),
          "run_for": RUN_FOR,
          "warmup": WARMUP,
        },
      )
      for wf in factors
    ],
  )

  run_experiment_group(
    name="pgt-{}".format(config),
    run="./run_postgres.sh",
    experiments=[
      ExperimentInstance(
        name="pgt-{}-{}".format(config, wf),
        options={
          "sf": SCALE_FACTOR,
          "tclients": wf,
          "aclients": 0,
          "run_for": RUN_FOR,
          "warmup": WARMUP,
        },
      )
      for wf in factors
    ],
  )
